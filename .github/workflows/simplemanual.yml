# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      jdk:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Temurin JDK'
        # Default value if no value is explicitly provided
        default: 'https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.20.1+1/OpenJDK11U-jdk_x64_windows_hotspot_11.0.20.1_1.zip'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
        
      dcevm:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'DCEVM JDK'
        # Default value if no value is explicitly provided
        default: 'https://github.com/TravaOpenJDK/trava-jdk-11-dcevm/releases/download/dcevm-11.0.15+1/Openjdk11u-dcevm-windows-x64.zip'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
        
      jre:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Temurin JRE'
        # Default value if no value is explicitly provided
        default: 'https://github.com/adoptium/temurin11-binaries/releases/download/jdk-11.0.20.1+1/OpenJDK11U-jre_x64_windows_hotspot_11.0.20.1_1.zip'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

jobs:
  confirm:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Confirm inputs
      run: |
        echo "Using ${{ inputs.jre }}"
        echo "Using ${{ inputs.jdk }}"
        echo "Using ${{ inputs.dcevm }}"
        env
      
  get-zipfiles:
    runs-on: ubuntu-latest
    steps:    
        # Checkout the branch first
      - name: checkout
        uses: actions/checkout@v2

      - name: wget dcevm
        uses: wei/wget@v1
        with:
          args: -O dcevm.zip ${{ inputs.dcevm }}
          
      - name: wget openjdk
        uses: wei/wget@v1
        with:
          args: -O jdk.zip ${{ inputs.jdk }}
          
      - name: wget openjre
        uses: wei/wget@v1
        with:
          args: -O jre.zip ${{ inputs.jre }}          
  
      - name: ls
        run: |
          ls -asltr
          
      - name: unzip all
        run: |
          unzip -q dcevm.zip -d dcevm
          unzip -q jdk.zip -d jdk
          unzip -q jre.zip -d jre
          
      - name: list contents
        run: |
          ls -asltr
          echo "dcevm" && ls -asl dcevm/
          echo "jdk" && ls -asl jdk/
          echo "jre" && ls -asl jre/
          
      - name: Copy files
        run: |
          # Copy {TravaJDK Directory}/bin/server/jvm.dll to {JRE Directory}/bin/server/jvm.dll
          cp dcevm/*/bin/server/jvm.dll jre/*/bin/server/jvm.dll
          # Copy {AdoptOpenJDK Directory}/lib/modules to {JRE Directory}/lib/modules
          cp jdk/*/lib/modules  jre/*/lib/modules
          mkdir windows-x64
          zip -r windows-x64/jdk-11.0.20.1+1-jre-dcevm.zip jre/*

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3.1.3
        with:    # Artifact name
          name: jdk-11.0.20.1+1-jre-dcevm.zip
          path: windows-x64/jdk-11.0.20.1+1-jre-dcevm.zip
          retention-days: 90

      - name: setup git config
        run: |
          # setup the username and email. I tend to use 'GitHub Actions Bot' with no email by default
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: commit
        run: |
          # Stage the file, commit and push
          ls 
          ls windows-x64/*
          git add windows-x64/*
          git commit -m "New DCEVM build"
          git push origin main
      
          
